`[Solution:`[Assembly:`@File:`{`Solution.Name`\`Assembly.Namespace`\Root.cs`]`]// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
//  file, You can obtain one at http://mozilla.org/MPL/2.0/.

using org.xpangen.Generator.Application;
using org.xpangen.Generator.Data;

namespace `Assembly.Namespace`
{
    /// <summary>
    /// Generator Data Root
    /// </summary>
    public class Root : GenApplicationBase
    {
        public Root(GenData genData)
        {
             GenData = genData;
			 base.GenObject = genData.Root;
		}
`[Class':
        public GenNamedApplicationList<`Class.Name`> `Class.Name`List { get; private set; }
`]`[Class':
        protected override void GenObjectSetNotification()
        {
            `Class.Name`List = new GenNamedApplicationList<`Class.Name`>(this);
        }

        public `Class.Name` Add`Class.Name`(`[Property/:`{string `Property.Name``], `])
        {
            var item = new `Class.Name`(GenData)
                           {
                               GenObject = GenData.CreateObject("", "`Class.Name`")`[Property:,
                               `Property.Name` = `Property.Name``]
                           };
            `Class.Name`List.Add(item);
            return item;
        }
    }
`]}
`[Class:`@MapSet:`{ClassName`]`{`Class.Name``]`]`@File:`{`Solution.Name`\`Assembly.Namespace`\`Class.Name`.cs`]`]// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
//  file, You can obtain one at http://mozilla.org/MPL/2.0/.

using org.xpangen.Generator.Application;
using org.xpangen.Generator.Data;

namespace `Assembly.Namespace`
{
    /// <summary>
    /// `Class.Title`
    /// </summary>
    public class `Class.Name` : GenNamedApplicationBase
    {
        public `Class.Name`()
        {
        }

        public `Class.Name`(GenData genData) : this()
        {
			GenData = genData;
        }

`[Property:        /// <summary>
        /// `Property.Title`
        /// </summary>
        public`?Property.Name='Name': override`] string `Property.Name`
        {
            get { return AsString("`Property.Name`"); }
            set
            {
                if (`Property.Name` == value) return;
                SetString("`Property.Name`", value);
                if (!DelayedSave) SaveFields();
            }
        }

`]`[SubClass:        public GenNamedApplicationList<`SubClass.Name`> `SubClass.Name`List { get; private set; }
`]`[SubClass':
        protected override void GenObjectSetNotification()
        {
`]`[SubClass:            `SubClass.Name`List = new GenNamedApplicationList<`SubClass.Name`>(this);
`]`[SubClass':        }`]`[SubClass:`%Class.Name=SubClass.Name:

        public `Class.Name` Add`Class.Name`(`[Property/:`{string `Property.Name``], `])
        {
            var item = new `Class.Name`(GenData)
                           {
                               GenObject = GenData.CreateObject("`@MapGet:'ClassName'`]", "`Class.Name`")`[Property:,
                               `Property.Name` = `Property.Name``]
                           };
            `Class.Name`List.Add(item);
            return item;
        }
`]`]    }
}
`]`]`]